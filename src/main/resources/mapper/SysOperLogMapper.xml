<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qian.system.mapper.SysOperLogMapper">

    <resultMap type="com.qian.system.domain.entity.SysOperLog" id="OperLogResult">
        <id     property="operId"        column="id"           />
        <result property="title"         column="title"        />
        <result property="businessType"  column="business_type"/>
        <result property="method"        column="method"       />
        <result property="requestMethod" column="request_method"/>
        <result property="operatorType"  column="operator_type"/>
        <result property="operationName" column="operation_name"/>
        <result property="deptName"      column="dept_name"    />
        <result property="operUrl"       column="oper_url"     />
        <result property="operationIp"   column="operation_ip" />
        <result property="operationLocation" column="operation_location"/>
        <result property="operationParam" column="operation_param"/>
        <result property="jsonResult"    column="json_result"  />
        <result property="status"        column="status"       />
        <result property="errorMsg"      column="error_msg"    />
        <result property="operationTime" column="operation_time"/>
        <result property="createTime"    column="create_time"  />
        <result property="updateTime"    column="update_time"  />
        <result property="delFlag"       column="del_flag"     />
    </resultMap>

    <sql id="selectOperLogVo">
        select id, title, business_type, method, request_method, operator_type, operation_name, dept_name, oper_url, operation_ip, operation_location, operation_param, json_result, status, error_msg, operation_time, create_time, update_time, del_flag
        from sys_operation_log
    </sql>

    <insert id="insertOperLog" parameterType="com.qian.system.domain.entity.SysOperLog">
        insert into sys_operation_log(
            title, business_type, method, request_method, operator_type, operation_name, dept_name, oper_url, operation_ip, operation_location, operation_param, json_result, status, error_msg, operation_time, create_time, update_time, del_flag
        )values(
            #{title}, #{businessType}, #{method}, #{requestMethod}, #{operatorType}, #{operationName}, #{deptName}, #{operUrl}, #{operationIp}, #{operationLocation}, #{operationParam}, #{jsonResult}, #{status}, #{errorMsg}, #{operationTime}, #{createTime}, #{updateTime}, #{delFlag}
        )
    </insert>

    <select id="selectOperLogList" parameterType="com.qian.system.domain.entity.SysOperLog" resultMap="OperLogResult">
        <include refid="selectOperLogVo"/>
        <where>
            <if test="title != null and title != ''">
                AND title like concat('%', #{title}, '%')
            </if>
            <if test="businessType != null">
                AND business_type = #{businessType}
            </if>
            <if test="operatorType != null">
                AND operator_type = #{operatorType}
            </if>
            <if test="operationName != null and operationName != ''">
                AND operation_name like concat('%', #{operationName}, '%')
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
            AND del_flag = '0'
        </where>
        order by operation_time desc
    </select>

    <delete id="deleteOperLogByIds" parameterType="Long">
        update sys_operation_log set del_flag = '1' where id in
        <foreach collection="array" item="operId" open="(" separator="," close=")">
            #{operId}
        </foreach>
    </delete>

    <select id="selectOperLogById" parameterType="Long" resultMap="OperLogResult">
        <include refid="selectOperLogVo"/>
        where id = #{operId} and del_flag = '0'
    </select>

    <update id="cleanOperLog">
        update sys_operation_log set del_flag = '1'
    </update>

</mapper> 