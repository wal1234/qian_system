<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qian.system.mapper.BlogCategoryMapper">

    <resultMap type="com.qian.system.domain.entity.BlogCategory" id="BlogCategoryResult">
        <id     property="categoryId"    column="category_id"    />
        <result property="categoryName"  column="category_name"  />
        <result property="orderNum"      column="order_num"      />
        <result property="status"        column="status"         />
        <result property="createBy"      column="create_by"      />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"      column="update_by"      />
        <result property="updateTime"    column="update_time"    />
        <result property="delFlag"       column="del_flag"       />
    </resultMap>

    <sql id="selectCategoryVo">
        select category_id, category_name, order_num, status, create_by, create_time, update_by, update_time, del_flag
        from blog_category
    </sql>

    <select id="selectCategoryList" parameterType="BlogCategory" resultMap="BlogCategoryResult">
        <include refid="selectCategoryVo"/>
        <where>
            <if test="categoryName != null and categoryName != ''">
                AND category_name like concat('%', #{categoryName}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            AND del_flag = '0'
        </where>
        order by order_num
    </select>

    <select id="selectCategoryById" parameterType="Long" resultMap="BlogCategoryResult">
        <include refid="selectCategoryVo"/>
        where category_id = #{categoryId} and del_flag = '0'
    </select>

    <insert id="insertCategory" parameterType="BlogCategory">
        insert into blog_category(
            category_name,
            order_num,
            status,
            create_by,
            create_time,
            update_by,
            update_time,
            del_flag
        )values(
            #{categoryName},
            #{orderNum},
            #{status},
            #{createBy},
            #{createTime},
            #{updateBy},
            #{updateTime},
            #{delFlag}
        )
    </insert>

    <update id="updateCategory" parameterType="BlogCategory">
        update blog_category
        <set>
            <if test="categoryName != null and categoryName != ''">category_name = #{categoryName},</if>
            <if test="orderNum != null">order_num = #{orderNum},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where category_id = #{categoryId}
    </update>

    <update id="deleteCategoryByIds" parameterType="Long">
        update blog_category set del_flag = '1' where category_id in
        <foreach collection="array" item="categoryId" open="(" separator="," close=")">
            #{categoryId}
        </foreach>
    </update>

    <update id="updateCategoryStatus" parameterType="BlogCategory">
        update blog_category set status = #{status}, update_by = #{updateBy}, update_time = sysdate()
        where category_id = #{categoryId}
    </update>

</mapper> 